// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. Клиенты приходят и делают заказы на разные блюда.

// Необходимо создать систему управления этими заказами, которая позволит:
// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.

// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.

// Повара и их специализации:
// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:
// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:
// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.

console.log("Task-2");

// Специализации поваров
const cook = new Map();
cook.set("Виктор","Пицца")
    .set("Ольга","Суши")
    .set("Дмитрий","Десерты");

// Список блюд и кто их готовит
const dishes = new Map();
dishes.set('Пицца "Маргарита"','Виктор')
      .set('Пицца "Пепперони"','Виктор')
      .set('Суши "Филадельфия"','Ольга')
      .set('Суши "Калифорния"','Ольга')
      .set('Тирамису','Дмитрий')
      .set('Чизкейк','Дмитрий');

// Получение имени повара, который готовит выбранное блюдо
function getCook(food, dishes) {
  let cooks = '?!?';
  for (let dish of dishes.keys()) {
    if(dish === food) {
      cooks = dishes.get(food);
    }
  }
  return cooks;
}

// Клиент №1 и его заказ
const client_1 = {name: "Алексей"};
let order_1 = new Map();
order_1.set(`\n Пицца "Пепперони"`, ` от повара ${getCook('Пицца "Маргарита"', dishes)}`)
      .set(`\n Тирамису`, ` от повара ${getCook('Тирамису', dishes)}`);

// Клиент №2 и его заказ
const client_2 = {name: "Мария"};
let order_2 = new Map();
order_2.set(`\n Суши "Калифорния"`, ` от повара ${getCook('Суши "Калифорния"', dishes)}`)
      .set(`\n Пицца "Маргарита"`, ` от повара ${getCook('Пицца "Маргарита"', dishes)}`);

// Клиент №3 и его заказ
const client_3 = {name: "Ирина"};
let order_3 = new Map();
order_3.set(`\n Чизкейк`, ` от повара ${getCook('Чизкейк', dishes)}`);

// Список клиентов и их заказы
let orders = new Map();
orders.set(client_1, order_1)
      .set(client_2, order_2)
      .set(client_3, order_3);

console.log(`Клиент №1 - ${client_1.name} заказал: ${Array.from(order_1)}`);
console.log(`Клиент №2 - ${client_2.name} заказал: ${Array.from(order_2)}`);
console.log(`Клиент №3 - ${client_3.name} заказал: ${Array.from(order_3)}`);